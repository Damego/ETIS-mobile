import notifee, { AndroidImportance, AndroidStyle } from '@notifee/react-native';

import { IDifferentCheckPoint } from '../tasks/signs/types';
import { getPointsWord } from '../utils/texts';
import { getRandomItem } from '../utils/utils';

export enum SignType {
  ZERO = 'ZERO',
  NEGATIVE = 'NEGATIVE',
  EXACTLY = 'EXACTLY',
  POSITIVE = 'POSITIVE',
  FULL = 'FULL',
}

const messages = {
  ZERO: ['–î–∞–∂–µ –Ω–µ –±–ª–∏–∑–∫–æ!', '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!', '–ü–æ–ø—Ä–æ–±—É–π –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–æ—Ç–µ–Ω–∫–∞!'],
  NEGATIVE: ['–í—Å–µ–≥–¥–∞ –µ—Å—Ç—å –ø–µ—Ä–µ—Å–¥–∞—á–∞ üôÉ', '–ê–Ω–ª–∞–∫'],
  EXACTLY: ['–ü–æ –≥—Ä–∞–Ω–∏', '–ò–¥–µ–∞–ª—å–Ω–æ', '–í —Ç–æ—á–∫—É'],
  POSITIVE: ['–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞!', 'üëç', 'üëå', 'ü§ô'],
  FULL: ['–õ–µ–≥–µ–Ω–¥–∞üëç', 'ü§Ø', 'ü§©', 'ü•≥', 'üéâ'],
};

const getSignType = (difference: IDifferentCheckPoint): SignType => {
  const differencePoints = difference.newResult.points - difference.newResult.passScore;

  if (differencePoints > 0) {
    return difference.newResult.points === difference.newResult.maxScore
      ? SignType.FULL
      : SignType.POSITIVE;
  }
  if (differencePoints < 0) {
    return difference.newResult.points === 0.0 ? SignType.ZERO : SignType.NEGATIVE;
  }

  return SignType.EXACTLY;
};

const buildMessage = (difference: IDifferentCheckPoint) => {
  const oldPoints = difference.oldResult.points;
  const newPoints = difference.newResult.points;

  let mark: string;
  if (oldPoints === 0.0) mark = `${newPoints}`;
  else {
    let different = newPoints - oldPoints;
    if (different % 1 !== 0) different = parseFloat(different.toFixed(1));

    mark = `${oldPoints} -> ${newPoints} (${different > 0 ? '+' : '-'}${Math.abs(different)})`;
  }

  const checkpointTheme = difference.newResult.theme;
  const signType = getSignType(difference);
  const message = getRandomItem(messages[signType]);
  const pointsString = getPointsWord(newPoints);
  return `${difference.subjectName}: ${checkpointTheme}\n${message} ${mark} ${pointsString}!`
};

export const displaySignNotification = async (difference: IDifferentCheckPoint) => {
  const signsChannelId = await notifee.createChannel({
    id: 'signs',
    name: '–ö–∞–Ω–∞–ª –æ—Ü–µ–Ω–æ–∫',
    vibrationPattern: [300, 500, 300, 500],
    importance: AndroidImportance.HIGH,
    sound: 'default',
    lightColor: '#FF231F7C',

  });

  const message = buildMessage(difference);
  await notifee.displayNotification({
    title: '–í—ã—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞!',
    body: message,
    android: {
      channelId: signsChannelId,
      pressAction: {
        id: 'default',
      },
      style: {
        type: AndroidStyle.BIGTEXT,
        text: message
      }
    },
  });
};
